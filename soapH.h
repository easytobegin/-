/* soapH.h
   Generated by gSOAP 2.8.45 for ImageUpload.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_unsignedByte_DEFINED
#define SOAP_TYPE_unsignedByte_DEFINED

#ifdef SOAP_DEFAULT_unsignedByte
#define soap_default_unsignedByte(soap, a) (*(a) = SOAP_DEFAULT_unsignedByte)
#else
#define soap_default_unsignedByte(soap, a) (*(a) = (unsigned char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_new_unsignedByte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_unsignedByte
#define soap_PUT_unsignedByte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_unsignedByte
#define soap_POST_send_unsignedByte(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_unsignedByte(soap, data, "unsignedByte", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_unsignedByte
#define soap_GET_unsignedByte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_unsignedByte(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_unsignedByte
#define soap_POST_recv_unsignedByte(soap, data) ( soap_read_unsignedByte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_unsignedInt_DEFINED
#define SOAP_TYPE_unsignedInt_DEFINED

#ifdef SOAP_DEFAULT_unsignedInt
#define soap_default_unsignedInt(soap, a) (*(a) = SOAP_DEFAULT_unsignedInt)
#else
#define soap_default_unsignedInt(soap, a) (*(a) = (unsigned int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_new_unsignedInt(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_unsignedInt
#define soap_PUT_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_unsignedInt
#define soap_POST_send_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_unsignedInt
#define soap_GET_unsignedInt(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_unsignedInt(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_unsignedInt
#define soap_POST_recv_unsignedInt(soap, data) ( soap_read_unsignedInt(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__boolean_DEFINED
#define SOAP_TYPE_xsd__boolean_DEFINED

#ifdef SOAP_DEFAULT_xsd__boolean
#define soap_default_xsd__boolean(soap, a) (*(a) = SOAP_DEFAULT_xsd__boolean)
#else
#define soap_default_xsd__boolean(soap, a) (*(a) = (enum xsd__boolean)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_new_xsd__boolean(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__boolean
#define soap_PUT_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_xsd__boolean
#define soap_POST_send_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__boolean
#define soap_GET_xsd__boolean(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__boolean(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_xsd__boolean
#define soap_POST_recv_xsd__boolean(soap, data) ( soap_read_xsd__boolean(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE___ns1__GetCurrentImg__DEFINED
#define SOAP_TYPE___ns1__GetCurrentImg__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCurrentImg_(struct soap*, struct __ns1__GetCurrentImg_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCurrentImg_(struct soap*, const struct __ns1__GetCurrentImg_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCurrentImg_(struct soap*, const char*, int, const struct __ns1__GetCurrentImg_ *, const char*);
SOAP_FMAC3 struct __ns1__GetCurrentImg_ * SOAP_FMAC4 soap_in___ns1__GetCurrentImg_(struct soap*, const char*, struct __ns1__GetCurrentImg_ *, const char*);

SOAP_FMAC3 struct __ns1__GetCurrentImg_ * SOAP_FMAC4 soap_new___ns1__GetCurrentImg_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCurrentImg_(struct soap*, const struct __ns1__GetCurrentImg_ *, const char*, const char*);

#ifndef soap_write___ns1__GetCurrentImg_
#define soap_write___ns1__GetCurrentImg_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetCurrentImg_(soap, data), 0) || soap_put___ns1__GetCurrentImg_(soap, data, "-ns1:GetCurrentImg", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__GetCurrentImg_
#define soap_PUT___ns1__GetCurrentImg_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__GetCurrentImg_(soap, data), 0) || soap_put___ns1__GetCurrentImg_(soap, data, "-ns1:GetCurrentImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__GetCurrentImg_
#define soap_POST_send___ns1__GetCurrentImg_(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__GetCurrentImg_(soap, data), 0) || soap_put___ns1__GetCurrentImg_(soap, data, "-ns1:GetCurrentImg", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetCurrentImg_ * SOAP_FMAC4 soap_get___ns1__GetCurrentImg_(struct soap*, struct __ns1__GetCurrentImg_ *, const char*, const char*);

#ifndef soap_read___ns1__GetCurrentImg_
#define soap_read___ns1__GetCurrentImg_(soap, data) ( ((data) ? (soap_default___ns1__GetCurrentImg_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__GetCurrentImg_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__GetCurrentImg_
#define soap_GET___ns1__GetCurrentImg_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__GetCurrentImg_(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__GetCurrentImg_
#define soap_POST_recv___ns1__GetCurrentImg_(soap, data) ( soap_read___ns1__GetCurrentImg_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__SetCurrentBillWay__DEFINED
#define SOAP_TYPE___ns1__SetCurrentBillWay__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetCurrentBillWay_(struct soap*, struct __ns1__SetCurrentBillWay_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetCurrentBillWay_(struct soap*, const struct __ns1__SetCurrentBillWay_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetCurrentBillWay_(struct soap*, const char*, int, const struct __ns1__SetCurrentBillWay_ *, const char*);
SOAP_FMAC3 struct __ns1__SetCurrentBillWay_ * SOAP_FMAC4 soap_in___ns1__SetCurrentBillWay_(struct soap*, const char*, struct __ns1__SetCurrentBillWay_ *, const char*);

SOAP_FMAC3 struct __ns1__SetCurrentBillWay_ * SOAP_FMAC4 soap_new___ns1__SetCurrentBillWay_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetCurrentBillWay_(struct soap*, const struct __ns1__SetCurrentBillWay_ *, const char*, const char*);

#ifndef soap_write___ns1__SetCurrentBillWay_
#define soap_write___ns1__SetCurrentBillWay_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetCurrentBillWay_(soap, data), 0) || soap_put___ns1__SetCurrentBillWay_(soap, data, "-ns1:SetCurrentBillWay", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__SetCurrentBillWay_
#define soap_PUT___ns1__SetCurrentBillWay_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__SetCurrentBillWay_(soap, data), 0) || soap_put___ns1__SetCurrentBillWay_(soap, data, "-ns1:SetCurrentBillWay", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__SetCurrentBillWay_
#define soap_POST_send___ns1__SetCurrentBillWay_(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__SetCurrentBillWay_(soap, data), 0) || soap_put___ns1__SetCurrentBillWay_(soap, data, "-ns1:SetCurrentBillWay", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetCurrentBillWay_ * SOAP_FMAC4 soap_get___ns1__SetCurrentBillWay_(struct soap*, struct __ns1__SetCurrentBillWay_ *, const char*, const char*);

#ifndef soap_read___ns1__SetCurrentBillWay_
#define soap_read___ns1__SetCurrentBillWay_(soap, data) ( ((data) ? (soap_default___ns1__SetCurrentBillWay_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__SetCurrentBillWay_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__SetCurrentBillWay_
#define soap_GET___ns1__SetCurrentBillWay_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__SetCurrentBillWay_(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__SetCurrentBillWay_
#define soap_POST_recv___ns1__SetCurrentBillWay_(soap, data) ( soap_read___ns1__SetCurrentBillWay_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__UpLoadImg__DEFINED
#define SOAP_TYPE___ns1__UpLoadImg__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpLoadImg_(struct soap*, struct __ns1__UpLoadImg_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpLoadImg_(struct soap*, const struct __ns1__UpLoadImg_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpLoadImg_(struct soap*, const char*, int, const struct __ns1__UpLoadImg_ *, const char*);
SOAP_FMAC3 struct __ns1__UpLoadImg_ * SOAP_FMAC4 soap_in___ns1__UpLoadImg_(struct soap*, const char*, struct __ns1__UpLoadImg_ *, const char*);

SOAP_FMAC3 struct __ns1__UpLoadImg_ * SOAP_FMAC4 soap_new___ns1__UpLoadImg_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpLoadImg_(struct soap*, const struct __ns1__UpLoadImg_ *, const char*, const char*);

#ifndef soap_write___ns1__UpLoadImg_
#define soap_write___ns1__UpLoadImg_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpLoadImg_(soap, data), 0) || soap_put___ns1__UpLoadImg_(soap, data, "-ns1:UpLoadImg", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__UpLoadImg_
#define soap_PUT___ns1__UpLoadImg_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__UpLoadImg_(soap, data), 0) || soap_put___ns1__UpLoadImg_(soap, data, "-ns1:UpLoadImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__UpLoadImg_
#define soap_POST_send___ns1__UpLoadImg_(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__UpLoadImg_(soap, data), 0) || soap_put___ns1__UpLoadImg_(soap, data, "-ns1:UpLoadImg", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpLoadImg_ * SOAP_FMAC4 soap_get___ns1__UpLoadImg_(struct soap*, struct __ns1__UpLoadImg_ *, const char*, const char*);

#ifndef soap_read___ns1__UpLoadImg_
#define soap_read___ns1__UpLoadImg_(soap, data) ( ((data) ? (soap_default___ns1__UpLoadImg_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__UpLoadImg_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__UpLoadImg_
#define soap_GET___ns1__UpLoadImg_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__UpLoadImg_(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__UpLoadImg_
#define soap_POST_recv___ns1__UpLoadImg_(soap, data) ( soap_read___ns1__UpLoadImg_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__GetSysTime__DEFINED
#define SOAP_TYPE___ns1__GetSysTime__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSysTime_(struct soap*, struct __ns1__GetSysTime_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSysTime_(struct soap*, const struct __ns1__GetSysTime_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSysTime_(struct soap*, const char*, int, const struct __ns1__GetSysTime_ *, const char*);
SOAP_FMAC3 struct __ns1__GetSysTime_ * SOAP_FMAC4 soap_in___ns1__GetSysTime_(struct soap*, const char*, struct __ns1__GetSysTime_ *, const char*);

SOAP_FMAC3 struct __ns1__GetSysTime_ * SOAP_FMAC4 soap_new___ns1__GetSysTime_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSysTime_(struct soap*, const struct __ns1__GetSysTime_ *, const char*, const char*);

#ifndef soap_write___ns1__GetSysTime_
#define soap_write___ns1__GetSysTime_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSysTime_(soap, data), 0) || soap_put___ns1__GetSysTime_(soap, data, "-ns1:GetSysTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__GetSysTime_
#define soap_PUT___ns1__GetSysTime_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__GetSysTime_(soap, data), 0) || soap_put___ns1__GetSysTime_(soap, data, "-ns1:GetSysTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__GetSysTime_
#define soap_POST_send___ns1__GetSysTime_(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__GetSysTime_(soap, data), 0) || soap_put___ns1__GetSysTime_(soap, data, "-ns1:GetSysTime", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSysTime_ * SOAP_FMAC4 soap_get___ns1__GetSysTime_(struct soap*, struct __ns1__GetSysTime_ *, const char*, const char*);

#ifndef soap_read___ns1__GetSysTime_
#define soap_read___ns1__GetSysTime_(soap, data) ( ((data) ? (soap_default___ns1__GetSysTime_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__GetSysTime_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__GetSysTime_
#define soap_GET___ns1__GetSysTime_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__GetSysTime_(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__GetSysTime_
#define soap_POST_recv___ns1__GetSysTime_(soap, data) ( soap_read___ns1__GetSysTime_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__GetCurrentImg_DEFINED
#define SOAP_TYPE___ns1__GetCurrentImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCurrentImg(struct soap*, struct __ns1__GetCurrentImg *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCurrentImg(struct soap*, const struct __ns1__GetCurrentImg *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCurrentImg(struct soap*, const char*, int, const struct __ns1__GetCurrentImg *, const char*);
SOAP_FMAC3 struct __ns1__GetCurrentImg * SOAP_FMAC4 soap_in___ns1__GetCurrentImg(struct soap*, const char*, struct __ns1__GetCurrentImg *, const char*);

SOAP_FMAC3 struct __ns1__GetCurrentImg * SOAP_FMAC4 soap_new___ns1__GetCurrentImg(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCurrentImg(struct soap*, const struct __ns1__GetCurrentImg *, const char*, const char*);

#ifndef soap_write___ns1__GetCurrentImg
#define soap_write___ns1__GetCurrentImg(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetCurrentImg(soap, data), 0) || soap_put___ns1__GetCurrentImg(soap, data, "-ns1:GetCurrentImg", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__GetCurrentImg
#define soap_PUT___ns1__GetCurrentImg(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__GetCurrentImg(soap, data), 0) || soap_put___ns1__GetCurrentImg(soap, data, "-ns1:GetCurrentImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__GetCurrentImg
#define soap_POST_send___ns1__GetCurrentImg(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__GetCurrentImg(soap, data), 0) || soap_put___ns1__GetCurrentImg(soap, data, "-ns1:GetCurrentImg", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetCurrentImg * SOAP_FMAC4 soap_get___ns1__GetCurrentImg(struct soap*, struct __ns1__GetCurrentImg *, const char*, const char*);

#ifndef soap_read___ns1__GetCurrentImg
#define soap_read___ns1__GetCurrentImg(soap, data) ( ((data) ? (soap_default___ns1__GetCurrentImg(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__GetCurrentImg(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__GetCurrentImg
#define soap_GET___ns1__GetCurrentImg(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__GetCurrentImg(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__GetCurrentImg
#define soap_POST_recv___ns1__GetCurrentImg(soap, data) ( soap_read___ns1__GetCurrentImg(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__SetCurrentBillWay_DEFINED
#define SOAP_TYPE___ns1__SetCurrentBillWay_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SetCurrentBillWay(struct soap*, struct __ns1__SetCurrentBillWay *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SetCurrentBillWay(struct soap*, const struct __ns1__SetCurrentBillWay *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SetCurrentBillWay(struct soap*, const char*, int, const struct __ns1__SetCurrentBillWay *, const char*);
SOAP_FMAC3 struct __ns1__SetCurrentBillWay * SOAP_FMAC4 soap_in___ns1__SetCurrentBillWay(struct soap*, const char*, struct __ns1__SetCurrentBillWay *, const char*);

SOAP_FMAC3 struct __ns1__SetCurrentBillWay * SOAP_FMAC4 soap_new___ns1__SetCurrentBillWay(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SetCurrentBillWay(struct soap*, const struct __ns1__SetCurrentBillWay *, const char*, const char*);

#ifndef soap_write___ns1__SetCurrentBillWay
#define soap_write___ns1__SetCurrentBillWay(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SetCurrentBillWay(soap, data), 0) || soap_put___ns1__SetCurrentBillWay(soap, data, "-ns1:SetCurrentBillWay", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__SetCurrentBillWay
#define soap_PUT___ns1__SetCurrentBillWay(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__SetCurrentBillWay(soap, data), 0) || soap_put___ns1__SetCurrentBillWay(soap, data, "-ns1:SetCurrentBillWay", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__SetCurrentBillWay
#define soap_POST_send___ns1__SetCurrentBillWay(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__SetCurrentBillWay(soap, data), 0) || soap_put___ns1__SetCurrentBillWay(soap, data, "-ns1:SetCurrentBillWay", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SetCurrentBillWay * SOAP_FMAC4 soap_get___ns1__SetCurrentBillWay(struct soap*, struct __ns1__SetCurrentBillWay *, const char*, const char*);

#ifndef soap_read___ns1__SetCurrentBillWay
#define soap_read___ns1__SetCurrentBillWay(soap, data) ( ((data) ? (soap_default___ns1__SetCurrentBillWay(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__SetCurrentBillWay(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__SetCurrentBillWay
#define soap_GET___ns1__SetCurrentBillWay(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__SetCurrentBillWay(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__SetCurrentBillWay
#define soap_POST_recv___ns1__SetCurrentBillWay(soap, data) ( soap_read___ns1__SetCurrentBillWay(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__UpLoadImg_DEFINED
#define SOAP_TYPE___ns1__UpLoadImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UpLoadImg(struct soap*, struct __ns1__UpLoadImg *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UpLoadImg(struct soap*, const struct __ns1__UpLoadImg *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UpLoadImg(struct soap*, const char*, int, const struct __ns1__UpLoadImg *, const char*);
SOAP_FMAC3 struct __ns1__UpLoadImg * SOAP_FMAC4 soap_in___ns1__UpLoadImg(struct soap*, const char*, struct __ns1__UpLoadImg *, const char*);

SOAP_FMAC3 struct __ns1__UpLoadImg * SOAP_FMAC4 soap_new___ns1__UpLoadImg(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UpLoadImg(struct soap*, const struct __ns1__UpLoadImg *, const char*, const char*);

#ifndef soap_write___ns1__UpLoadImg
#define soap_write___ns1__UpLoadImg(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UpLoadImg(soap, data), 0) || soap_put___ns1__UpLoadImg(soap, data, "-ns1:UpLoadImg", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__UpLoadImg
#define soap_PUT___ns1__UpLoadImg(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__UpLoadImg(soap, data), 0) || soap_put___ns1__UpLoadImg(soap, data, "-ns1:UpLoadImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__UpLoadImg
#define soap_POST_send___ns1__UpLoadImg(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__UpLoadImg(soap, data), 0) || soap_put___ns1__UpLoadImg(soap, data, "-ns1:UpLoadImg", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UpLoadImg * SOAP_FMAC4 soap_get___ns1__UpLoadImg(struct soap*, struct __ns1__UpLoadImg *, const char*, const char*);

#ifndef soap_read___ns1__UpLoadImg
#define soap_read___ns1__UpLoadImg(soap, data) ( ((data) ? (soap_default___ns1__UpLoadImg(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__UpLoadImg(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__UpLoadImg
#define soap_GET___ns1__UpLoadImg(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__UpLoadImg(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__UpLoadImg
#define soap_POST_recv___ns1__UpLoadImg(soap, data) ( soap_read___ns1__UpLoadImg(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__GetSysTime_DEFINED
#define SOAP_TYPE___ns1__GetSysTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetSysTime(struct soap*, struct __ns1__GetSysTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetSysTime(struct soap*, const struct __ns1__GetSysTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetSysTime(struct soap*, const char*, int, const struct __ns1__GetSysTime *, const char*);
SOAP_FMAC3 struct __ns1__GetSysTime * SOAP_FMAC4 soap_in___ns1__GetSysTime(struct soap*, const char*, struct __ns1__GetSysTime *, const char*);

SOAP_FMAC3 struct __ns1__GetSysTime * SOAP_FMAC4 soap_new___ns1__GetSysTime(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetSysTime(struct soap*, const struct __ns1__GetSysTime *, const char*, const char*);

#ifndef soap_write___ns1__GetSysTime
#define soap_write___ns1__GetSysTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetSysTime(soap, data), 0) || soap_put___ns1__GetSysTime(soap, data, "-ns1:GetSysTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___ns1__GetSysTime
#define soap_PUT___ns1__GetSysTime(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize___ns1__GetSysTime(soap, data), 0) || soap_put___ns1__GetSysTime(soap, data, "-ns1:GetSysTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send___ns1__GetSysTime
#define soap_POST_send___ns1__GetSysTime(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize___ns1__GetSysTime(soap, data), 0) || soap_put___ns1__GetSysTime(soap, data, "-ns1:GetSysTime", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetSysTime * SOAP_FMAC4 soap_get___ns1__GetSysTime(struct soap*, struct __ns1__GetSysTime *, const char*, const char*);

#ifndef soap_read___ns1__GetSysTime
#define soap_read___ns1__GetSysTime(soap, data) ( ((data) ? (soap_default___ns1__GetSysTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__GetSysTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___ns1__GetSysTime
#define soap_GET___ns1__GetSysTime(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___ns1__GetSysTime(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv___ns1__GetSysTime
#define soap_POST_recv___ns1__GetSysTime(soap, data) ( soap_read___ns1__GetSysTime(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__GetCurrentImgResponse_DEFINED
#define SOAP_TYPE__ns1__GetCurrentImgResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__GetCurrentImgResponse(struct soap*, struct _ns1__GetCurrentImgResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__GetCurrentImgResponse(struct soap*, const struct _ns1__GetCurrentImgResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCurrentImgResponse(struct soap*, const char*, int, const struct _ns1__GetCurrentImgResponse *, const char*);
SOAP_FMAC3 struct _ns1__GetCurrentImgResponse * SOAP_FMAC4 soap_in__ns1__GetCurrentImgResponse(struct soap*, const char*, struct _ns1__GetCurrentImgResponse *, const char*);

SOAP_FMAC3 struct _ns1__GetCurrentImgResponse * SOAP_FMAC4 soap_new__ns1__GetCurrentImgResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__GetCurrentImgResponse(struct soap*, const struct _ns1__GetCurrentImgResponse *, const char*, const char*);

#ifndef soap_write__ns1__GetCurrentImgResponse
#define soap_write__ns1__GetCurrentImgResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__GetCurrentImgResponse(soap, data), 0) || soap_put__ns1__GetCurrentImgResponse(soap, data, "ns1:GetCurrentImgResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__GetCurrentImgResponse
#define soap_PUT__ns1__GetCurrentImgResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__GetCurrentImgResponse(soap, data), 0) || soap_put__ns1__GetCurrentImgResponse(soap, data, "ns1:GetCurrentImgResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__GetCurrentImgResponse
#define soap_POST_send__ns1__GetCurrentImgResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__GetCurrentImgResponse(soap, data), 0) || soap_put__ns1__GetCurrentImgResponse(soap, data, "ns1:GetCurrentImgResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__GetCurrentImgResponse * SOAP_FMAC4 soap_get__ns1__GetCurrentImgResponse(struct soap*, struct _ns1__GetCurrentImgResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetCurrentImgResponse
#define soap_read__ns1__GetCurrentImgResponse(soap, data) ( ((data) ? (soap_default__ns1__GetCurrentImgResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__GetCurrentImgResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__GetCurrentImgResponse
#define soap_GET__ns1__GetCurrentImgResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__GetCurrentImgResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__GetCurrentImgResponse
#define soap_POST_recv__ns1__GetCurrentImgResponse(soap, data) ( soap_read__ns1__GetCurrentImgResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__GetCurrentImg_DEFINED
#define SOAP_TYPE__ns1__GetCurrentImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__GetCurrentImg(struct soap*, struct _ns1__GetCurrentImg *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__GetCurrentImg(struct soap*, const struct _ns1__GetCurrentImg *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetCurrentImg(struct soap*, const char*, int, const struct _ns1__GetCurrentImg *, const char*);
SOAP_FMAC3 struct _ns1__GetCurrentImg * SOAP_FMAC4 soap_in__ns1__GetCurrentImg(struct soap*, const char*, struct _ns1__GetCurrentImg *, const char*);

SOAP_FMAC3 struct _ns1__GetCurrentImg * SOAP_FMAC4 soap_new__ns1__GetCurrentImg(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__GetCurrentImg(struct soap*, const struct _ns1__GetCurrentImg *, const char*, const char*);

#ifndef soap_write__ns1__GetCurrentImg
#define soap_write__ns1__GetCurrentImg(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__GetCurrentImg(soap, data), 0) || soap_put__ns1__GetCurrentImg(soap, data, "ns1:GetCurrentImg", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__GetCurrentImg
#define soap_PUT__ns1__GetCurrentImg(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__GetCurrentImg(soap, data), 0) || soap_put__ns1__GetCurrentImg(soap, data, "ns1:GetCurrentImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__GetCurrentImg
#define soap_POST_send__ns1__GetCurrentImg(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__GetCurrentImg(soap, data), 0) || soap_put__ns1__GetCurrentImg(soap, data, "ns1:GetCurrentImg", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__GetCurrentImg * SOAP_FMAC4 soap_get__ns1__GetCurrentImg(struct soap*, struct _ns1__GetCurrentImg *, const char*, const char*);

#ifndef soap_read__ns1__GetCurrentImg
#define soap_read__ns1__GetCurrentImg(soap, data) ( ((data) ? (soap_default__ns1__GetCurrentImg(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__GetCurrentImg(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__GetCurrentImg
#define soap_GET__ns1__GetCurrentImg(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__GetCurrentImg(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__GetCurrentImg
#define soap_POST_recv__ns1__GetCurrentImg(soap, data) ( soap_read__ns1__GetCurrentImg(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__SetCurrentBillWayResponse_DEFINED
#define SOAP_TYPE__ns1__SetCurrentBillWayResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__SetCurrentBillWayResponse(struct soap*, struct _ns1__SetCurrentBillWayResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__SetCurrentBillWayResponse(struct soap*, const struct _ns1__SetCurrentBillWayResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetCurrentBillWayResponse(struct soap*, const char*, int, const struct _ns1__SetCurrentBillWayResponse *, const char*);
SOAP_FMAC3 struct _ns1__SetCurrentBillWayResponse * SOAP_FMAC4 soap_in__ns1__SetCurrentBillWayResponse(struct soap*, const char*, struct _ns1__SetCurrentBillWayResponse *, const char*);

SOAP_FMAC3 struct _ns1__SetCurrentBillWayResponse * SOAP_FMAC4 soap_new__ns1__SetCurrentBillWayResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__SetCurrentBillWayResponse(struct soap*, const struct _ns1__SetCurrentBillWayResponse *, const char*, const char*);

#ifndef soap_write__ns1__SetCurrentBillWayResponse
#define soap_write__ns1__SetCurrentBillWayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__SetCurrentBillWayResponse(soap, data), 0) || soap_put__ns1__SetCurrentBillWayResponse(soap, data, "ns1:SetCurrentBillWayResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__SetCurrentBillWayResponse
#define soap_PUT__ns1__SetCurrentBillWayResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__SetCurrentBillWayResponse(soap, data), 0) || soap_put__ns1__SetCurrentBillWayResponse(soap, data, "ns1:SetCurrentBillWayResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__SetCurrentBillWayResponse
#define soap_POST_send__ns1__SetCurrentBillWayResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__SetCurrentBillWayResponse(soap, data), 0) || soap_put__ns1__SetCurrentBillWayResponse(soap, data, "ns1:SetCurrentBillWayResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__SetCurrentBillWayResponse * SOAP_FMAC4 soap_get__ns1__SetCurrentBillWayResponse(struct soap*, struct _ns1__SetCurrentBillWayResponse *, const char*, const char*);

#ifndef soap_read__ns1__SetCurrentBillWayResponse
#define soap_read__ns1__SetCurrentBillWayResponse(soap, data) ( ((data) ? (soap_default__ns1__SetCurrentBillWayResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__SetCurrentBillWayResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__SetCurrentBillWayResponse
#define soap_GET__ns1__SetCurrentBillWayResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__SetCurrentBillWayResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__SetCurrentBillWayResponse
#define soap_POST_recv__ns1__SetCurrentBillWayResponse(soap, data) ( soap_read__ns1__SetCurrentBillWayResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__SetCurrentBillWay_DEFINED
#define SOAP_TYPE__ns1__SetCurrentBillWay_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__SetCurrentBillWay(struct soap*, struct _ns1__SetCurrentBillWay *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__SetCurrentBillWay(struct soap*, const struct _ns1__SetCurrentBillWay *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SetCurrentBillWay(struct soap*, const char*, int, const struct _ns1__SetCurrentBillWay *, const char*);
SOAP_FMAC3 struct _ns1__SetCurrentBillWay * SOAP_FMAC4 soap_in__ns1__SetCurrentBillWay(struct soap*, const char*, struct _ns1__SetCurrentBillWay *, const char*);

SOAP_FMAC3 struct _ns1__SetCurrentBillWay * SOAP_FMAC4 soap_new__ns1__SetCurrentBillWay(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__SetCurrentBillWay(struct soap*, const struct _ns1__SetCurrentBillWay *, const char*, const char*);

#ifndef soap_write__ns1__SetCurrentBillWay
#define soap_write__ns1__SetCurrentBillWay(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__SetCurrentBillWay(soap, data), 0) || soap_put__ns1__SetCurrentBillWay(soap, data, "ns1:SetCurrentBillWay", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__SetCurrentBillWay
#define soap_PUT__ns1__SetCurrentBillWay(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__SetCurrentBillWay(soap, data), 0) || soap_put__ns1__SetCurrentBillWay(soap, data, "ns1:SetCurrentBillWay", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__SetCurrentBillWay
#define soap_POST_send__ns1__SetCurrentBillWay(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__SetCurrentBillWay(soap, data), 0) || soap_put__ns1__SetCurrentBillWay(soap, data, "ns1:SetCurrentBillWay", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__SetCurrentBillWay * SOAP_FMAC4 soap_get__ns1__SetCurrentBillWay(struct soap*, struct _ns1__SetCurrentBillWay *, const char*, const char*);

#ifndef soap_read__ns1__SetCurrentBillWay
#define soap_read__ns1__SetCurrentBillWay(soap, data) ( ((data) ? (soap_default__ns1__SetCurrentBillWay(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__SetCurrentBillWay(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__SetCurrentBillWay
#define soap_GET__ns1__SetCurrentBillWay(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__SetCurrentBillWay(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__SetCurrentBillWay
#define soap_POST_recv__ns1__SetCurrentBillWay(soap, data) ( soap_read__ns1__SetCurrentBillWay(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__UpLoadImgResponse_DEFINED
#define SOAP_TYPE__ns1__UpLoadImgResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__UpLoadImgResponse(struct soap*, struct _ns1__UpLoadImgResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__UpLoadImgResponse(struct soap*, const struct _ns1__UpLoadImgResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpLoadImgResponse(struct soap*, const char*, int, const struct _ns1__UpLoadImgResponse *, const char*);
SOAP_FMAC3 struct _ns1__UpLoadImgResponse * SOAP_FMAC4 soap_in__ns1__UpLoadImgResponse(struct soap*, const char*, struct _ns1__UpLoadImgResponse *, const char*);

SOAP_FMAC3 struct _ns1__UpLoadImgResponse * SOAP_FMAC4 soap_new__ns1__UpLoadImgResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__UpLoadImgResponse(struct soap*, const struct _ns1__UpLoadImgResponse *, const char*, const char*);

#ifndef soap_write__ns1__UpLoadImgResponse
#define soap_write__ns1__UpLoadImgResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__UpLoadImgResponse(soap, data), 0) || soap_put__ns1__UpLoadImgResponse(soap, data, "ns1:UpLoadImgResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__UpLoadImgResponse
#define soap_PUT__ns1__UpLoadImgResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__UpLoadImgResponse(soap, data), 0) || soap_put__ns1__UpLoadImgResponse(soap, data, "ns1:UpLoadImgResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__UpLoadImgResponse
#define soap_POST_send__ns1__UpLoadImgResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__UpLoadImgResponse(soap, data), 0) || soap_put__ns1__UpLoadImgResponse(soap, data, "ns1:UpLoadImgResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__UpLoadImgResponse * SOAP_FMAC4 soap_get__ns1__UpLoadImgResponse(struct soap*, struct _ns1__UpLoadImgResponse *, const char*, const char*);

#ifndef soap_read__ns1__UpLoadImgResponse
#define soap_read__ns1__UpLoadImgResponse(soap, data) ( ((data) ? (soap_default__ns1__UpLoadImgResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__UpLoadImgResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__UpLoadImgResponse
#define soap_GET__ns1__UpLoadImgResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__UpLoadImgResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__UpLoadImgResponse
#define soap_POST_recv__ns1__UpLoadImgResponse(soap, data) ( soap_read__ns1__UpLoadImgResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__UpLoadImg_DEFINED
#define SOAP_TYPE__ns1__UpLoadImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__UpLoadImg(struct soap*, struct _ns1__UpLoadImg *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__UpLoadImg(struct soap*, const struct _ns1__UpLoadImg *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UpLoadImg(struct soap*, const char*, int, const struct _ns1__UpLoadImg *, const char*);
SOAP_FMAC3 struct _ns1__UpLoadImg * SOAP_FMAC4 soap_in__ns1__UpLoadImg(struct soap*, const char*, struct _ns1__UpLoadImg *, const char*);

SOAP_FMAC3 struct _ns1__UpLoadImg * SOAP_FMAC4 soap_new__ns1__UpLoadImg(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__UpLoadImg(struct soap*, const struct _ns1__UpLoadImg *, const char*, const char*);

#ifndef soap_write__ns1__UpLoadImg
#define soap_write__ns1__UpLoadImg(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__UpLoadImg(soap, data), 0) || soap_put__ns1__UpLoadImg(soap, data, "ns1:UpLoadImg", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__UpLoadImg
#define soap_PUT__ns1__UpLoadImg(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__UpLoadImg(soap, data), 0) || soap_put__ns1__UpLoadImg(soap, data, "ns1:UpLoadImg", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__UpLoadImg
#define soap_POST_send__ns1__UpLoadImg(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__UpLoadImg(soap, data), 0) || soap_put__ns1__UpLoadImg(soap, data, "ns1:UpLoadImg", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__UpLoadImg * SOAP_FMAC4 soap_get__ns1__UpLoadImg(struct soap*, struct _ns1__UpLoadImg *, const char*, const char*);

#ifndef soap_read__ns1__UpLoadImg
#define soap_read__ns1__UpLoadImg(soap, data) ( ((data) ? (soap_default__ns1__UpLoadImg(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__UpLoadImg(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__UpLoadImg
#define soap_GET__ns1__UpLoadImg(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__UpLoadImg(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__UpLoadImg
#define soap_POST_recv__ns1__UpLoadImg(soap, data) ( soap_read__ns1__UpLoadImg(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__GetSysTimeResponse_DEFINED
#define SOAP_TYPE__ns1__GetSysTimeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__GetSysTimeResponse(struct soap*, struct _ns1__GetSysTimeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__GetSysTimeResponse(struct soap*, const struct _ns1__GetSysTimeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSysTimeResponse(struct soap*, const char*, int, const struct _ns1__GetSysTimeResponse *, const char*);
SOAP_FMAC3 struct _ns1__GetSysTimeResponse * SOAP_FMAC4 soap_in__ns1__GetSysTimeResponse(struct soap*, const char*, struct _ns1__GetSysTimeResponse *, const char*);

SOAP_FMAC3 struct _ns1__GetSysTimeResponse * SOAP_FMAC4 soap_new__ns1__GetSysTimeResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__GetSysTimeResponse(struct soap*, const struct _ns1__GetSysTimeResponse *, const char*, const char*);

#ifndef soap_write__ns1__GetSysTimeResponse
#define soap_write__ns1__GetSysTimeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__GetSysTimeResponse(soap, data), 0) || soap_put__ns1__GetSysTimeResponse(soap, data, "ns1:GetSysTimeResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__GetSysTimeResponse
#define soap_PUT__ns1__GetSysTimeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__GetSysTimeResponse(soap, data), 0) || soap_put__ns1__GetSysTimeResponse(soap, data, "ns1:GetSysTimeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__GetSysTimeResponse
#define soap_POST_send__ns1__GetSysTimeResponse(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__GetSysTimeResponse(soap, data), 0) || soap_put__ns1__GetSysTimeResponse(soap, data, "ns1:GetSysTimeResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__GetSysTimeResponse * SOAP_FMAC4 soap_get__ns1__GetSysTimeResponse(struct soap*, struct _ns1__GetSysTimeResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetSysTimeResponse
#define soap_read__ns1__GetSysTimeResponse(soap, data) ( ((data) ? (soap_default__ns1__GetSysTimeResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__GetSysTimeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__GetSysTimeResponse
#define soap_GET__ns1__GetSysTimeResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__GetSysTimeResponse(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__GetSysTimeResponse
#define soap_POST_recv__ns1__GetSysTimeResponse(soap, data) ( soap_read__ns1__GetSysTimeResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__GetSysTime_DEFINED
#define SOAP_TYPE__ns1__GetSysTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__GetSysTime(struct soap*, struct _ns1__GetSysTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__GetSysTime(struct soap*, const struct _ns1__GetSysTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetSysTime(struct soap*, const char*, int, const struct _ns1__GetSysTime *, const char*);
SOAP_FMAC3 struct _ns1__GetSysTime * SOAP_FMAC4 soap_in__ns1__GetSysTime(struct soap*, const char*, struct _ns1__GetSysTime *, const char*);

SOAP_FMAC3 struct _ns1__GetSysTime * SOAP_FMAC4 soap_new__ns1__GetSysTime(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__GetSysTime(struct soap*, const struct _ns1__GetSysTime *, const char*, const char*);

#ifndef soap_write__ns1__GetSysTime
#define soap_write__ns1__GetSysTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__GetSysTime(soap, data), 0) || soap_put__ns1__GetSysTime(soap, data, "ns1:GetSysTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ns1__GetSysTime
#define soap_PUT__ns1__GetSysTime(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize__ns1__GetSysTime(soap, data), 0) || soap_put__ns1__GetSysTime(soap, data, "ns1:GetSysTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__ns1__GetSysTime
#define soap_POST_send__ns1__GetSysTime(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize__ns1__GetSysTime(soap, data), 0) || soap_put__ns1__GetSysTime(soap, data, "ns1:GetSysTime", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__GetSysTime * SOAP_FMAC4 soap_get__ns1__GetSysTime(struct soap*, struct _ns1__GetSysTime *, const char*, const char*);

#ifndef soap_read__ns1__GetSysTime
#define soap_read__ns1__GetSysTime(soap, data) ( ((data) ? (soap_default__ns1__GetSysTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__GetSysTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__ns1__GetSysTime
#define soap_GET__ns1__GetSysTime(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__ns1__GetSysTime(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__ns1__GetSysTime
#define soap_POST_recv__ns1__GetSysTime(soap, data) ( soap_read__ns1__GetSysTime(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__base64Binary_DEFINED
#define SOAP_TYPE_xsd__base64Binary_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__base64Binary(struct soap*, struct xsd__base64Binary *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__base64Binary(struct soap*, const struct xsd__base64Binary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const struct xsd__base64Binary *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__base64Binary2s(struct soap*, struct xsd__base64Binary);
SOAP_FMAC3 struct xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, struct xsd__base64Binary *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__base64Binary(struct soap*, const char*, struct xsd__base64Binary *);

SOAP_FMAC3 struct xsd__base64Binary * SOAP_FMAC4 soap_new_xsd__base64Binary(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__base64Binary(struct soap*, const struct xsd__base64Binary *, const char*, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__base64Binary
#define soap_PUT_xsd__base64Binary(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_xsd__base64Binary
#define soap_POST_send_xsd__base64Binary(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || (soap_serialize_xsd__base64Binary(soap, data), 0) || soap_put_xsd__base64Binary(soap, data, "xsd:base64Binary", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, struct xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( ((data) ? (soap_default_xsd__base64Binary(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__base64Binary
#define soap_GET_xsd__base64Binary(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__base64Binary(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_xsd__base64Binary
#define soap_POST_recv_xsd__base64Binary(soap, data) ( soap_read_xsd__base64Binary(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetCurrentImgResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetCurrentImgResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCurrentImgResponse(struct soap*, struct _ns1__GetCurrentImgResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCurrentImgResponse(struct soap*, const char *, int, struct _ns1__GetCurrentImgResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__GetCurrentImgResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCurrentImgResponse(struct soap*, const char*, struct _ns1__GetCurrentImgResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCurrentImgResponse(struct soap*, struct _ns1__GetCurrentImgResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__GetCurrentImgResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCurrentImgResponse(struct soap*, struct _ns1__GetCurrentImgResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetCurrentImg_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetCurrentImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetCurrentImg(struct soap*, struct _ns1__GetCurrentImg *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetCurrentImg(struct soap*, const char *, int, struct _ns1__GetCurrentImg *const*, const char *);
SOAP_FMAC3 struct _ns1__GetCurrentImg ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetCurrentImg(struct soap*, const char*, struct _ns1__GetCurrentImg **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetCurrentImg(struct soap*, struct _ns1__GetCurrentImg *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__GetCurrentImg ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetCurrentImg(struct soap*, struct _ns1__GetCurrentImg **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SetCurrentBillWayResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SetCurrentBillWayResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetCurrentBillWayResponse(struct soap*, struct _ns1__SetCurrentBillWayResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetCurrentBillWayResponse(struct soap*, const char *, int, struct _ns1__SetCurrentBillWayResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__SetCurrentBillWayResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetCurrentBillWayResponse(struct soap*, const char*, struct _ns1__SetCurrentBillWayResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetCurrentBillWayResponse(struct soap*, struct _ns1__SetCurrentBillWayResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__SetCurrentBillWayResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetCurrentBillWayResponse(struct soap*, struct _ns1__SetCurrentBillWayResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SetCurrentBillWay_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SetCurrentBillWay_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SetCurrentBillWay(struct soap*, struct _ns1__SetCurrentBillWay *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SetCurrentBillWay(struct soap*, const char *, int, struct _ns1__SetCurrentBillWay *const*, const char *);
SOAP_FMAC3 struct _ns1__SetCurrentBillWay ** SOAP_FMAC4 soap_in_PointerTo_ns1__SetCurrentBillWay(struct soap*, const char*, struct _ns1__SetCurrentBillWay **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SetCurrentBillWay(struct soap*, struct _ns1__SetCurrentBillWay *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__SetCurrentBillWay ** SOAP_FMAC4 soap_get_PointerTo_ns1__SetCurrentBillWay(struct soap*, struct _ns1__SetCurrentBillWay **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UpLoadImgResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__UpLoadImgResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpLoadImgResponse(struct soap*, struct _ns1__UpLoadImgResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpLoadImgResponse(struct soap*, const char *, int, struct _ns1__UpLoadImgResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__UpLoadImgResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpLoadImgResponse(struct soap*, const char*, struct _ns1__UpLoadImgResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpLoadImgResponse(struct soap*, struct _ns1__UpLoadImgResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__UpLoadImgResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpLoadImgResponse(struct soap*, struct _ns1__UpLoadImgResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UpLoadImg_DEFINED
#define SOAP_TYPE_PointerTo_ns1__UpLoadImg_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UpLoadImg(struct soap*, struct _ns1__UpLoadImg *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UpLoadImg(struct soap*, const char *, int, struct _ns1__UpLoadImg *const*, const char *);
SOAP_FMAC3 struct _ns1__UpLoadImg ** SOAP_FMAC4 soap_in_PointerTo_ns1__UpLoadImg(struct soap*, const char*, struct _ns1__UpLoadImg **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UpLoadImg(struct soap*, struct _ns1__UpLoadImg *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__UpLoadImg ** SOAP_FMAC4 soap_get_PointerTo_ns1__UpLoadImg(struct soap*, struct _ns1__UpLoadImg **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetSysTimeResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetSysTimeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSysTimeResponse(struct soap*, struct _ns1__GetSysTimeResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSysTimeResponse(struct soap*, const char *, int, struct _ns1__GetSysTimeResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__GetSysTimeResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSysTimeResponse(struct soap*, const char*, struct _ns1__GetSysTimeResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSysTimeResponse(struct soap*, struct _ns1__GetSysTimeResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__GetSysTimeResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSysTimeResponse(struct soap*, struct _ns1__GetSysTimeResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetSysTime_DEFINED
#define SOAP_TYPE_PointerTo_ns1__GetSysTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetSysTime(struct soap*, struct _ns1__GetSysTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetSysTime(struct soap*, const char *, int, struct _ns1__GetSysTime *const*, const char *);
SOAP_FMAC3 struct _ns1__GetSysTime ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetSysTime(struct soap*, const char*, struct _ns1__GetSysTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetSysTime(struct soap*, struct _ns1__GetSysTime *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__GetSysTime ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetSysTime(struct soap*, struct _ns1__GetSysTime **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTounsignedByte_DEFINED
#define SOAP_TYPE_PointerTounsignedByte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, NULL) || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), (soap)->error )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), soap_connect(soap, URL, NULL) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), (soap)->error )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
